# OpenRouteService API server configuration
#

# The upstream API gateways, NOT the real ORS instances
upstream api-gateway {
	least_conn;

        server 192.168.2.17:8080;
        server 192.168.2.18:8080;
}

upstream backend-ors-gateway {
        server 127.0.0.1:19999;
        keepalive 64;
}

upstream backend-ors-gateway-worker {
        server 192.168.2.18:19999;
        keepalive 64;
}

upstream backend-ors-sesame {
        server 192.168.2.11:19999;
        keepalive 64;
}

limit_req_zone $binary_remote_addr zone=public:32m rate=120r/m;
limit_req_status 429;

server {
        # for rsyslog and piwik
        access_log   syslog:server=unix:/var/cache/nginx/access.socket,facility=local0 piwik;

        # SSL
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	add_header   Strict-Transport-Security "max-age=31536000; includeSubdomains";
	add_header   X-Content-Type-Options nosniff;
	add_header   X-Frame-Options DENY;

	server_name api.openrouteservice.org dev.openrouteservice.org;

	ssl_certificate /etc/letsencrypt/live/api.openrouteservice.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/api.openrouteservice.org/privkey.pem;

	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout  5m;

	ssl_ciphers  "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH !RC4";
	ssl_prefer_server_ciphers   on;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	ssl_dhparam /etc/letsencrypt/live/api.openrouteservice.org/dhparam2048.pem;

	# Append the remote users IP to any existing X-Forwarded-For value
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	location / {
		root /var/www/api.openrouteservice.org/html;
		index index.html;
		try_files $uri $uri/ =404;
	}

        # make sure there is a trailing slash at the browser
        # or the URLs will be wrong
        location ~ /netdata/(?<behost>.*)/(?<ndpath>.*) {
                # allow anyone from the University
                allow 129.206.0.0/16;
                # drop rest of the world
                deny all;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_http_version 1.1;
		proxy_pass_request_headers on;
		proxy_set_header Connection "keep-alive";
		proxy_store off;
		proxy_pass http://backend-$behost/$ndpath$is_args$args;

		gzip on;
		gzip_proxied any;
		gzip_types *;
	}

	# make sure there is a trailing slash at the browser
	# or the URLs will be wrong
	location ~ /netdata/(?<behost>.*) {
                # allow anyone from the University
                allow 129.206.0.0/16;
                # drop rest of the world
                deny all;
	        return 301 /netdata/$behost/;
	}

	location /search {
		return 444;
	}

	location /directions {
		proxy_pass http://api-gateway/directions;
		proxy_read_timeout 30s;
	}

	location /geocoding {
		proxy_pass http://api-gateway/geocoding;
		proxy_read_timeout 30s;
	}

	location /isochrones {
		proxy_pass http://api-gateway/isochrones;
		proxy_read_timeout 120s;
	}

	location /places {
		proxy_pass http://api-gateway/places;
		proxy_read_timeout 120s;
	}
	
	location /pdirections {
                limit_req zone=public burst=5;
		proxy_pass http://api-gateway/pdirections;
		proxy_read_timeout 30s;
	}

	location /pgeocoding {
                limit_req zone=public burst=20;
		proxy_pass http://api-gateway/pgeocoding;
		proxy_read_timeout 30s;
	}

	location /pisochrones {
                limit_req zone=public burst=5;
		proxy_pass http://api-gateway/pisochrones;
		proxy_read_timeout 120s;
	}

	location /pplaces {
                limit_req zone=public burst=5;
		proxy_pass http://api-gateway/pplaces;
		proxy_read_timeout 120s;
	}

}
